#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 
    behaviors {
        // ZMK_BEHAVIOR(comma_inner_morph, mod_morph,
        //     bindings = <&kp SEMICOLON>, <&kp LESS_THAN>;
        //     mods = <(MOD_LCTL)>;
        // )
        rd: redo {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp LGUI>;

            mods = <(MOD_LSFT)>;
        };
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&none  &kp Q        &kp W         &kp E        &kp R        &kp T                 &kp Y            &kp U        &kp I        &kp O       &kp P      &none
&none  &mt LGUI A   &mt LALT S    &mt LCTRL D  &mt LSHFT F  &kp G                 &kp H            &mt RSHFT J  &mt RCTRL K  &mt RALT L  &mt RGUI   &none
&none  &kp Z        &kp X         &kp C        &kp V        &kp B                 &kp N            &kp M        &kp COMMA    &kp DOT     &kp SLASH  &none
&none  &none        &lt 3 ESCAPE  &lt 6 SPACE  &lt 4 TAB             &lt 2 ENTER  &lt 1 BACKSPACE                                                   &none
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none   &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET         &none  &none      &none      &none     &none     &none
&none   &kp SEMI          &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL                 &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
&none   &kp TILDE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PIPE                  &none  &none      &none      &none     &none     &none
&none   &none             &kp DOT       &kp NUMBER_0  &kp MINUS                        &none  &none                                            &none
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none  &kp LEFT_BRACE  &kp AMPERSAND         &kp STAR               &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE                       &none  &none      &none      &none     &none     &none
&none  &kp COLON       &kp DOLLAR            &kp PERCENT            &kp CARET              &kp PLUS                              &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
&none  &kp TILDE       &kp EXCL              &kp AT                 &kp HASH               &kp PIPE                              &none  &none      &none      &none     &none     &none
&none  &none           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE                                        &none  &none                                            &none
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp F12  &kp F7     &kp F8     &kp F9   &kp PRINTSCREEN                    &none  &none      &none      &none     &none     &none
&none   &kp F11  &kp F4     &kp F5     &kp F6   &kp SCROLLLOCK                     &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
&none   &kp F10  &kp F1     &kp F2     &kp F3   &kp PAUSE_BREAK                    &none  &none      &none      &none     &none     &none
&none   &none    &kp K_APP  &kp SPACE  &kp TAB                              &none  &none                                            &none
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none  &none     &none     &none      &none      &none               &none          &none      &none   &none      &none      &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none               &kp PAGE_UP    &mkp LCLK  &none   &mkp RCLK  &mkp MCLK  &none
&none  &none     &none     &none      &none      &none               &kp PAGE_DOWN  &none      &none   &none      &none      &none
&none  &none     &none     &none      &none                   &none  &none                                                   &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&none  &none  &none  &none  &none  &none                           &none     &rd       &mt LGUI V     &none        &none      &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT &none              &kp CAPS  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &none
&none  &none  &none  &none  &none  &none                           &kp INS   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none
&none  &none  &none  &none  &none                           &none  &none                                                      &none
            >;
        };
    };
};
